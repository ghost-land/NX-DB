{
    "description": "A single bit of computer memory became sentient and decided to escape from digital into the real world. Explore RAM, modify bytes and hack machine code and CPU registers to set it free. \n\nThe game is about the way computers work internally. Having some programming knowledge makes the game easier, but it isn't required. All the elements required to solve the puzzles are explained in the game. \n\nHow does it play?\n\nYou play the game as a single bit of computer memory. You can invade other bytes around you and thus modify their values. The game features various types of puzzles:\n\n1. Explore\n\nWith ability to XOR into adjacent bytes, you can navigate your way through existing data in the memory. The game automatically marks the bytes you cannot go through without getting yourself overwritten and prevents you entering those. Both binary and ASCII views are available, which you can utilise to find an open path for a particular puzzle.\n\n2. Decipher programs\n\nVarious programs run on the computer you are trying to escape from. The game includes a disassembler showing you the assembly language corresponding to the machine code that is being executed. Don't worry if you don't know any Assembly. There are only a handful of CPU instructions and they are introduced gradually as you complete the puzzles. Reading the assembly code, you can track the program logic, see which parts of RAM it reads and writes to and manipulate data in those locations to get the program to do what you want.\n\n3. Invade CPU registers\n\nThe computer you are trying to escape has a simple CPU with a couple of registers. You can trick the CPU to load yourself into the registers and affect code execution or offload yourself into otherwise unreachable memory locations.\n\n4. Hack\n\nFor some puzzles, it isn't enough to change the data in RAM or registers. You can also change the machine code to get the computer to do different things.\n\nGameplay Tips:\n\nCarefully observe the bytes on the screen and what the CPU is doing. Sometimes you need to read the code in straightforward manner. Sometimes you need to work your way backwards: find the line of the code you want executed and then trace the code backwards to figure out how to trick the CPU to get to that instruction.\n\nThe game has about 30 puzzles, and some of those might take considerable effort to solve. So take it easy and don't rush to the end. If you solve a puzzle by accident, don't go forward until you understand why it happened. You might miss some small detail and get completely stuck on the next puzzle.\n",
    "id": "010043200E12E000",
    "name": "Rogue Bit",
    "publisher": "Bigosaur",
    "releaseDate": 20190426,
    "version": 0,
    "category": [
        "Puzzle",
        "Simulation",
        "Education",
        "Adventure"
    ],
    "developer": null,
    "intro": "explore, hack, escape",
    "isDemo": false,
    "languages": [
        "en"
    ],
    "nsuId": 70010000019541,
    "numberOfPlayers": 1,
    "ratingContent": [
        "General"
    ],
    "region": null,
    "rightsId": null
}